basePath: /
definitions:
  model.AdminLoginRequest:
    properties:
      email:
        type: string
    required:
    - email
    type: object
  model.EmailLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.EmailSignupRequest:
    properties:
      confirmpassword:
        type: string
      email:
        type: string
      name:
        type: string
      password:
        type: string
    required:
    - confirmpassword
    - email
    - name
    - password
    type: object
  model.ErrorResponse:
    properties:
      message:
        example: Error message
        type: string
      status:
        example: false
        type: boolean
    type: object
  model.RestaurantLoginRequest:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  model.RestaurantSignupRequest:
    properties:
      address:
        type: string
      certificate_url:
        type: string
      description:
        type: string
      email:
        type: string
      image_url:
        type: string
      name:
        type: string
      password:
        type: string
      phone_number:
        type: string
    required:
    - address
    - certificate_url
    - description
    - email
    - image_url
    - name
    - password
    - phone_number
    type: object
  model.SuccessResponse:
    properties:
      message:
        type: string
      status:
        type: boolean
    type: object
host: localhost:8080
info:
  contact: {}
  description: Documentation
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: FoodBuddy API
  version: "1.0"
paths:
  /api/v1/auth/admin/login:
    post:
      consumes:
      - application/json
      description: Login an admin using email
      parameters:
      - description: Admin Login
        in: body
        name: AdminLogin
        required: true
        schema:
          $ref: '#/definitions/model.AdminLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Admin login
      tags:
      - authentication
  /api/v1/auth/google/login:
    get:
      description: Login using Google authentication
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Google login
      tags:
      - authentication
  /api/v1/auth/restaurant/login:
    post:
      consumes:
      - application/json
      description: Login a restaurant
      parameters:
      - description: Restaurant Login
        in: body
        name: RestaurantLogin
        required: true
        schema:
          $ref: '#/definitions/model.RestaurantLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Restaurant login
      tags:
      - authentication
  /api/v1/auth/restaurant/signup:
    post:
      consumes:
      - application/json
      description: Signup a new restaurant
      parameters:
      - description: Restaurant Signup
        in: body
        name: RestaurantSignup
        required: true
        schema:
          $ref: '#/definitions/model.RestaurantSignupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Restaurant signup
      tags:
      - authentication
  /api/v1/auth/user/email/login:
    post:
      consumes:
      - application/json
      description: Login a user using email
      parameters:
      - description: Email Login
        in: body
        name: EmailLogin
        required: true
        schema:
          $ref: '#/definitions/model.EmailLoginRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Email login
      tags:
      - authentication
  /api/v1/auth/user/email/signup:
    post:
      consumes:
      - application/json
      description: Signup a new user using email
      parameters:
      - description: Email Signup
        in: body
        name: EmailSignup
        required: true
        schema:
          $ref: '#/definitions/model.EmailSignupRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Email signup
      tags:
      - authentication
  /api/v1/auth/verifyotp/{role}/{email}/{otp}:
    get:
      consumes:
      - application/json
      description: Verify OTP for email verification
      parameters:
      - description: User role
        in: path
        name: role
        required: true
        type: string
      - description: User email
        in: path
        name: email
        required: true
        type: string
      - description: OTP
        in: path
        name: otp
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/model.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "401":
          description: Unauthorized
          schema:
            $ref: '#/definitions/model.ErrorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/model.ErrorResponse'
      summary: Verify OTP
      tags:
      - authentication
swagger: "2.0"
